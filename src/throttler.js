// Generated by LiveScript 1.2.0
(function(){
  var Throttler;
  Throttler = (function(){
    Throttler.displayName = 'Throttler';
    var prototype = Throttler.prototype, constructor = Throttler;
    function Throttler($timeout){
      this.$timeout = $timeout;
    }
    prototype.config = function(func, wait){
      this.func = func;
      this.wait = wait;
      return this.throttle;
    };
    prototype.throttle = function(){
      if (this.noTimeRemaining()) {
        return this.reset();
      } else {
        return this.setTimeout();
      }
    };
    prototype.noTimeRemaining = function(){
      return this.remainingTime() <= 0;
    };
    prototype.remainingTime = function(){
      return this.remaining || (this.remaining = wait - (this.now() - this.previous));
    };
    prototype.setTimeout = function(){
      return this.timeout || (this.timeout = $timeout(later, remaining));
    };
    prototype.reset = function(){
      this.clearTimeout(this.timeout);
      this.$timeout.cancel(this.timeout);
      this.timeout = null;
      this.previous = this.now();
      return this.func.call();
    };
    prototype.now = function(){
      return this._now || (this._now = new Date().getTime());
    };
    prototype.timeout = null;
    prototype.previous = 0;
    prototype.later = function(){
      this.previous = new Date().getTime();
      this.$timeout.cancel(timeout);
      this.timeout = null;
      this.func.call();
      return this.context = null;
    };
    return Throttler;
  }());
}).call(this);
